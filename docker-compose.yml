version: "3"

services:
  db:
    image: mongo:latest
    restart: unless-stopped #컨테이너 스탑하기전까지 항상 재시작
    volumes:
      - mongoVolume:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: legolego
      MONGO_INITDB_DATABASE: django_mongodb_docker
      MONGODB_DATA_DIR: /var/lib/docker/volumes/mongo
    ports:
      - 27017:27017

  backend:
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8001
    ports:
      - 8001:8001
    volumes:
      - ./backend/:/backend/
    expose:
      - 8001
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    restart: on-failure #정상적으로 종료되지않은 경우에만 재시작 (오류코드 0 아니면 재시작)

  celery:
    build:
      context: ./backend/celery
    command: celery -A lego2me worker -l info
    volumes:
      - ./backend/:/backend/
    depends_on:
      - db
      - rabbitmq
      - backend
    restart: on-failure

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

volumes:
  mongoVolume:
