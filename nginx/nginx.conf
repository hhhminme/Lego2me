user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {                     
    worker_connections  1024;
}
# http {
#     include       /etc/nginx/mime.types;
#     default_type  text/html;

#     upstream frontend {
#         server frontend:3000;
#     }

#     upstream backend {
#         ip_hash;
#         server backend:8000;
#     }

#     server {
#         listen 8080;
#         server_name localhost;
     
#         location / {
#             proxy_pass         http://frontend;

#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
#             proxy_set_header Host $http_host;
#             proxy_redirect off;
            
#             #
#             # Wide-open CORS config for nginx
#             #
#             if ($request_method = 'OPTIONS') {
#                 add_header 'Access-Control-Allow-Origin' '*';
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#                 #
#                 # Custom headers and headers various browsers *should* be OK with but aren't
#                 #
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#                 #
#                 # Tell client that this pre-flight info is valid for 20 days
#                 #
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain; charset=utf-8';
#                 add_header 'Content-Length' 0;
#                 return 204;
#             }
#             if ($request_method = 'POST') {
#                 add_header 'Access-Control-Allow-Origin' '*' always;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#                 add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#             }
#             if ($request_method = 'GET') {
#                 add_header 'Access-Control-Allow-Origin' '*' always;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#                 add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#             }
#         }
#     }

#     server {
#         listen 8081;
#         server_name localhost;
     
#         location / {
#             proxy_pass         http://backend;  

#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
#             proxy_set_header Host $http_host;

#             #
#             # Wide-open CORS config for nginx
#             #
#             if ($request_method = 'OPTIONS') {
#                 add_header 'Access-Control-Allow-Origin' '*';
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#                 #
#                 # Custom headers and headers various browsers *should* be OK with but aren't
#                 #
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#                 #
#                 # Tell client that this pre-flight info is valid for 20 days
#                 #
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain; charset=utf-8';
#                 add_header 'Content-Length' 0;
#                 return 204;
#             }
#             if ($request_method = 'POST') {
#                 add_header 'Access-Control-Allow-Origin' '*' always;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#                 add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#             }
#             if ($request_method = 'GET') {
#                 add_header 'Access-Control-Allow-Origin' '*' always;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#                 add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#             }
#         }

#         location /static/ {
#            alias /static/;  
#         }
#     }

#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#     access_log  /var/log/nginx/access.log  main;
                                                
#     sendfile        on;                                                                         
#     keepalive_timeout  65;                                                                      
#     include /etc/nginx/conf.d/*.conf; 
# }      
    http {


    upstream frontend {      #docker compose에서 정의한 service이름
        server frontend:3000;  #해당 서비스의 포트번호
    }

    upstream backend {
        server backend:8000;
    }


    server {
        listen 8080;

        location / {    #80번 포트에 대해서 경로 "/"로 들어오면 frontend로 이동
            proxy_pass http://frontend;
        }

        location /api {   #80번 포트에 대해서 /api ~~ 로 들어오면 backend로 이동(우선순위 높음)
            proxy_pass http://backend;
        }

        # location /sockjs-node {
        #     proxy_pass http://frontend;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        # }

    }
}